const { css } = require('chroma-js');

// Generated by CoffeeScript 2.2.3
(function() {
  var color_vars, postcss, valueHook;

  postcss = require('postcss');

  valueHook = require('./value-hook');


  color_vars = {};

  valueHook.add(function(str, node) {
    try {
      return str.replace(/@([a-z_\-0-9]+)/i, function(m, name) {
        // console.log("N",name)
        if (color_vars[name]) {
          return valueHook.hook(color_vars[name], node);
        } else {
          // color_vars[name]='$'+name;
          return "#deadba";//$"+name;
        }
      });
    } catch (e) {
      console.log("RAT",e)
      return '#deadbe';
    }

  });

  module.exports = postcss.plugin('gtk-color-variables', function() {
    return function(css, processor) {
      css.walkAtRules(function(node) {
        var _, name, value;
        console.log("B",node,node.name);
        if (node.name === 'define-a-color') {
          console.log("df",node.params);
          [_, name, value] = node.params.match(/(\S+)\s+(.*)/);
          color_vars[name] = value;
          return node.remove();
        }
      });
      for(let i=0;i<10;i++){
        console.log(color_vars,JSON.stringify(color_vars));
        for(let k in color_vars){
          color_vars[k]=color_vars[k].replace(/@([a-z_\-0-9]+)/gi, function(m, name) {
            // console.log("N",name)
            if (color_vars[name]) {
              return color_vars[name];
            } else {
              // color_vars[name]='$'+name;
              return "#deadbc";//$"+name;
            }
          });
        }
      }
      return css.walk(function(node) {
        if(node.type==="decl"){
          node.value=node.value.replace(/@([a-z_\-0-9]+)/gi, function(m, name) {

            
            if (color_vars[name]) {
              return valueHook.hook(color_vars[name], node);
            } else {
              // color_vars[name]='$'+name;
              return "#deadbc";//$"+name;
            }
          });
        // console.log("B",node,bef,node.value)
        }
        // var _, name, value;
        // if (node.raw() === 'define-color') {
        //   [_, name, value] = node.params.match(/(\S+)\s+(.*)/);
        //   color_vars[name] = value;
        //   return ;//node.remove();
        // }
      });
    
      // return css.walkAtRules(function(node) {
      //   var _, name, value;
      //   if (node.name === 'define-color') {
      //     [_, name, value] = node.params.match(/(\S+)\s+(.*)/);
      //     color_vars[name] = value;
      //     return node.remove();
      //   }
      // });
    
    };
  });
}.call(this));
